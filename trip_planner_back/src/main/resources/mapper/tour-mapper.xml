<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.iei.tour.model.dao.TourDao">
	<select id="searchPartner" resultType="int">
		select partner_no
		from partner_tbl
		where member_no=
			(select member_no from member_tbl where member_email=#{memberEmail})
	</select>
  	<insert id="insertTour">
		insert into tour_tbl values
		(tour_seq.nextval,#{partnerNo},#{tourName},#{tourType},#{tourAddr},#{tourImg},#{tourIntro},#{salesCount},#{salesPeriod},2)
		<selectKey resultType="int" keyProperty="tourNo" order="AFTER">
			select max(tour_no) from tour_tbl
		</selectKey>
	</insert>
	<select id="totalCount" resultType="int">
		select count(*) from tour_tbl
		JOIN PARTNER_TBL ON TOUR_TBL.PARTNER_NO = PARTNER_TBL.PARTNER_NO
		WHERE PARTNER_TBL.MEMBER_NO = #{memberNo}
	</select>
	<select id="selectTourSale" resultType="tour">
		select * from
		    (select rownum as rnum, t.* from
		        (select
		            tour_no,
		            tour_name,
		            tour_img,
		            sales_count,
		            sales_status,
		            to_char(sales_period,'yyyy-mm-dd') as sales_period
		        from tour_tbl
		        JOIN PARTNER_TBL ON TOUR_TBL.PARTNER_NO = PARTNER_TBL.PARTNER_NO
		        WHERE PARTNER_TBL.MEMBER_NO = #{memberNo}
		        ORDER BY tour_no DESC) t)
		where rnum between #{start} and #{end}
	</select>
	<update id="updateStatus">
		update tour_tbl set sales_status = #{updateStatus} where tour_no = #{tourNo}
	</update>
	<delete id="deleteTour">
		delete from tour_tbl where tour_no = #{tourNo}
	</delete>
	<select id="selectOneTour" resultType="tour">
		select
			tour_no,
			tour_name,
			tour_type,
			tour_addr,
			tour_img,
			tour_intro,
			sales_count,
			to_char(sales_period,'yyyy-mm-dd') as sales_period,
			sales_status
		from tour_tbl where tour_no = #{tourNo}
	</select>
	<update id="updateTour">
		update tour_tbl set
			tour_name = #{tourName},
			tour_type = #{tourType},
			tour_addr = #{tourAddr},
			tour_img = #{tourImg},
			tour_intro = #{tourIntro},
			sales_count = #{salesCount},
			sales_period = #{salesPeriod}
		where tour_no = #{tourNo}
	</update>
	<select id="getLastInsertTourNo" resultType="int">
		SELECT MAX(TOUR_NO) AS LAST_INSERTED_TOUR_NO FROM TOUR_TBL
	</select>
	<select id="selectTourTicket" resultType="tourTicket">
		SELECT tour_no, ticket_adult, ticket_youth, ticket_child FROM TOUR_TICKET_TBL WHERE TOUR_NO = #{tourNo}
	</select>
	<update id="modifyTourTicket">
		update tour_ticket_tbl set
			ticket_adult = #{ticketAdult},
			ticket_youth = #{ticketYouth},
			ticket_child = #{ticketChild}
		where tour_no = #{tourNo}
	</update>
	<insert id="tempTourTicket">
		insert into tour_ticket_tbl values
		(#{tourNo}, 0, 0, 0)
	</insert>
	<select id="searchTourNo" parameterType="map" resultType="int">
	    SELECT TOUR_NO
	    FROM TOUR_TBL
	    WHERE TOUR_NO = #{tourNo} AND PARTNER_NO = (
	        SELECT PARTNER_NO
	        FROM MEMBER_TBL
	        WHERE MEMBER_EMAIL = #{memberEmail}
	    )
	</select>
	<select id="checkPartnerNo" resultType="int" parameterType="int">
	    SELECT PARTNER_NO
	    FROM TOUR_TBL
	    WHERE TOUR_NO = #{tourNo}
	</select>
	<select id="selectTourList" resultType="tour">
		SELECT * FROM tour_tbl WHERE sales_status = 1 AND sales_period >= SYSDATE ORDER BY 1 DESC
	</select>
	<select id="selectTicketList" resultType="tourTicket">
		SELECT * FROM TOUR_TICKET_TBL 
	    WHERE TOUR_NO IN (SELECT tour_no FROM tour_tbl WHERE sales_status = 1 AND sales_period >= SYSDATE) 
	    ORDER BY 1 DESC
	</select>
	<select id="searchTour" resultType="tour">
	    SELECT *
	    FROM TOUR_TBL
	    WHERE (TOUR_NAME LIKE '%' || #{searchText} || '%' OR TOUR_ADDR LIKE '%' || #{searchText} || '%')
	    AND SALES_PERIOD >= #{startDate}
	    AND SALES_STATUS = 1
	    ORDER BY 1 DESC
	</select>
	<select id="searchTicket" resultType="tourTicket">
	    SELECT * FROM TOUR_TICKET_TBL
	    WHERE TOUR_NO IN (
	        SELECT TOUR_NO
	        FROM TOUR_TBL
	        WHERE (TOUR_NAME LIKE '%' || #{searchText} || '%' OR TOUR_ADDR LIKE '%' || #{searchText} || '%')
	        AND SALES_PERIOD >= #{startDate}
	        AND SALES_STATUS = 1
	    )
	    ORDER BY 1 DESC
	</select>
	<select id="searchType" resultType="tour">
		SELECT *
	    FROM TOUR_TBL
	    WHERE TOUR_TYPE = #{tourType}
	    AND SALES_PERIOD >= SYSDATE
	    AND SALES_STATUS = 1
	    ORDER BY 1 DESC
	</select>
	<select id="searchTypeTicket" resultType="tourTicket">
		SELECT *
	    FROM TOUR_TICKET_TBL
	    WHERE TOUR_NO IN (
	        SELECT TOUR_NO
	        FROM TOUR_TBL
	        WHERE TOUR_TYPE = #{tourType}
	        AND SALES_PERIOD >= SYSDATE
	        AND SALES_STATUS = 1
	    )
	    ORDER BY 1 DESC
	</select>
	<select id="viewTourDetail" resultType="tour">
		SELECT * FROM TOUR_TBL WHERE TOUR_NO = #{tourNo}
	</select>
	<select id="viewTicket" resultType="tourTicket">
		SELECT * FROM TOUR_TICKET_TBL WHERE TOUR_NO = #{tourNo}
	</select>
	<select id="selectPartner" resultType="partner">
	    SELECT P.*, M.MEMBER_EMAIL
	    FROM PARTNER_TBL P
	    JOIN MEMBER_TBL M ON P.MEMBER_NO = M.MEMBER_NO
	    JOIN TOUR_TBL T ON P.PARTNER_NO = T.PARTNER_NO
	    WHERE T.TOUR_NO = #{tourNo}
	</select>
	<select id="searchMember" resultType="int">
	    SELECT MEMBER_NO
	    FROM MEMBER_TBL
	    WHERE MEMBER_EMAIL = #{memberEmail}
	</select>
	<insert id="insertReview" parameterType="review">
	    INSERT INTO REVIEW_TBL (REVIEW_NO, MEMBER_NO, REVIEW_TYPE, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_STAR, REF_NO, REVIEW_DATE)
	    VALUES (REVIEW_SEQ.nextval, #{memberNo}, 2, null, #{reviewContent}, #{reviewStar}, #{tourNo}, sysdate)
	</insert>
	<select id="selectReviewList" resultType="review">
		SELECT review_no,member_nickname,review_content,review_star,ref_no,review_date
		FROM review_tbl
		join member_tbl using(member_no)
		WHERE ref_no = #{tourNo} ORDER BY 1 DESC
	</select>
	<select id="selectLoginMember" resultType="member">
		SELECT * FROM MEMBER_TBL WHERE MEMBER_EMAIL = #{memberEmail}
	</select>
	<update id="modifyTourReview" parameterType="map">
	    UPDATE REVIEW_TBL
	    SET review_content = #{review.reviewContent}
	    WHERE review_no = #{reviewNo}
	</update>
	<delete id="deleteReview">
		delete from review_tbl where review_no = #{reviewNo}
	</delete>
	
	<select id="selectBookTourList" resultType="tourBook">
		SELECT * FROM (
		    SELECT rownum rnum, tbt.* FROM (
		        SELECT 
		            tb.tour_book_no, 
		            tb.tour_no,
		            tb.book_guest, 
		            tb.book_fee, 
		            tb.book_date,
		            CASE
		                WHEN tb.book_status = 1 THEN '예약확정'
		                WHEN tb.book_status = 2 THEN '예약취소'
		            END AS book_status_str,
		            (SELECT tour_name FROM tour_tbl WHERE tour_no = tb.tour_no) AS tour_name, 
		            (SELECT tour_img FROM tour_tbl WHERE tour_no = tb.tour_no) AS tour_img,
		            (SELECT member_name FROM member_tbl WHERE member_no = tb.member_no) AS member_name,
		            (
		                SELECT
		                    CASE
		                        WHEN t.tour_type = 1 THEN '전시관'
		                        WHEN t.tour_type = 2 THEN '레저'
		                        WHEN t.tour_type = 3 THEN '테마파크'
		                        WHEN t.tour_type = 4 THEN '박람회'
		                        WHEN t.tour_type = 5 THEN '입장권'
		                    END
		                FROM tour_tbl t WHERE t.tour_no = tb.tour_no
		            ) AS tour_type_str
		        FROM tour_book_tbl tb 
		        WHERE tb.member_no IN (SELECT member_no FROM member_tbl WHERE member_email = #{memberEmail}) 
		        ORDER BY tb.tour_book_no DESC
		    ) tbt
		) WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	<insert id="insertBook">
	    INSERT INTO TOUR_BOOK_TBL
	    VALUES (TOUR_BOOK_SEQ.NEXTVAL, #{tourNo}, #{memberNo}, #{bookDate}, #{bookGuest}, #{bookFee}, 1)
	</insert>
	<select id="totalBookCount" resultType="int">
	    SELECT COUNT(*) 
	    FROM TOUR_BOOK_TBL tb
	    JOIN TOUR_TBL t ON tb.TOUR_NO = t.TOUR_NO
	    JOIN PARTNER_TBL p ON t.PARTNER_NO = p.PARTNER_NO
	    WHERE p.MEMBER_NO = #{memberNo}
	</select>
	<select id="selectTourBook" resultType="tourBook">
	    SELECT *
	    FROM (
	        SELECT ROWNUM AS rnum, t.*
	        FROM (
	            SELECT
	                tb.tour_book_no,
	                tb.tour_no,
	                t.tour_name,
	                tb.member_no,
	                m.member_name,
	                m.member_phone,
	                m.member_email,
	                TO_CHAR(tb.book_date, 'yyyy-mm-dd') AS book_date,
	                tb.book_guest,
	                tb.book_fee,
	                tb.book_status,
	                TO_CHAR(t.sales_period, 'yyyy-mm-dd') AS sales_period
	            FROM tour_book_tbl tb
	            JOIN tour_tbl t ON tb.tour_no = t.tour_no
	            JOIN partner_tbl p ON t.partner_no = p.partner_no
	            JOIN member_tbl m ON tb.member_no = m.member_no
	            WHERE p.member_no = #{memberNo}
	            ORDER BY tb.tour_no DESC
	        ) t
	    )
	    WHERE rnum BETWEEN #{start} AND #{end} order by 2 desc
	</select>
	<select id="totalSearchProduct" resultType="int">
	    SELECT COUNT(*) 
	    FROM TOUR_BOOK_TBL tb
	    JOIN TOUR_TBL t ON tb.TOUR_NO = t.TOUR_NO
	    JOIN PARTNER_TBL p ON t.PARTNER_NO = p.PARTNER_NO
	    WHERE p.MEMBER_NO = #{memberNo}
	    AND t.TOUR_NAME LIKE '%' || #{searchText} || '%'
	</select>
	<select id="searchTourMgmt1" resultType="tourBook">
	    SELECT *
	    FROM (
	        SELECT ROWNUM AS rnum, t.*
	        FROM (
	            SELECT
	                tb.tour_book_no,
	                tb.tour_no,
	                t.tour_name,
	                tb.member_no,
	                m.member_name,
	                m.member_phone,
	                m.member_email,
	                TO_CHAR(tb.book_date, 'yyyy-mm-dd') AS book_date,
	                tb.book_guest,
	                tb.book_fee,
	                tb.book_status,
	                TO_CHAR(t.sales_period, 'yyyy-mm-dd') AS sales_period
	            FROM tour_book_tbl tb
	            JOIN tour_tbl t ON tb.tour_no = t.tour_no
	            JOIN partner_tbl p ON t.partner_no = p.partner_no
	            JOIN member_tbl m ON tb.member_no = m.member_no
	            WHERE p.member_no = #{memberNo}
             	AND t.tour_name LIKE '%' || #{searchText} || '%'
	            ORDER BY tb.tour_no DESC
	        ) t
	    )
	    WHERE rnum BETWEEN #{start} AND #{end} order by 2 desc
	</select>
	<select id="totalSearchMember" resultType="int">
	    SELECT COUNT(*) 
	    FROM TOUR_BOOK_TBL tb
	    JOIN MEMBER_TBL m ON tb.MEMBER_NO = m.MEMBER_NO
	    JOIN TOUR_TBL t ON tb.TOUR_NO = t.TOUR_NO
	    JOIN PARTNER_TBL p ON t.PARTNER_NO = p.PARTNER_NO
	    WHERE p.MEMBER_NO = #{memberNo}
	    AND m.MEMBER_NAME LIKE '%' || #{searchText} || '%'
	</select>
	<select id="searchTourMgmt2" resultType="tourBook">
	    SELECT *
	    FROM (
	        SELECT ROWNUM AS rnum, t.*
	        FROM (
	            SELECT
	                tb.tour_book_no,
	                tb.tour_no,
	                t.tour_name,
	                tb.member_no,
	                m.member_name,
	                m.member_phone,
	                m.member_email,
	                TO_CHAR(tb.book_date, 'yyyy-mm-dd') AS book_date,
	                tb.book_guest,
	                tb.book_fee,
	                tb.book_status,
	                TO_CHAR(t.sales_period, 'yyyy-mm-dd') AS sales_period
	            FROM tour_book_tbl tb
	            JOIN tour_tbl t ON tb.tour_no = t.tour_no
	            JOIN partner_tbl p ON t.partner_no = p.partner_no
	            JOIN member_tbl m ON tb.member_no = m.member_no
	            WHERE p.member_no = #{memberNo}
	            AND m.member_name LIKE '%' || #{searchText} || '%'
	            ORDER BY tb.tour_no DESC
	        ) t
	    )
	    WHERE rnum BETWEEN #{start} AND #{end} order by 2 desc
	</select>
	<select id="selectTopTour" resultType="tour">
		SELECT TOUR_TBL.TOUR_NO,
		       TOUR_TBL.TOUR_NAME,
		       TOUR_TBL.TOUR_IMG,
		       AVG(REVIEW_TBL.REVIEW_STAR) AS AVG_STAR
		FROM TOUR_TBL
		LEFT JOIN REVIEW_TBL ON TOUR_TBL.TOUR_NO = REVIEW_TBL.REF_NO
		WHERE REVIEW_TBL.REVIEW_TYPE = 2
		GROUP BY TOUR_TBL.TOUR_NO, TOUR_TBL.TOUR_NAME, TOUR_TBL.TOUR_IMG
		ORDER BY AVG_STAR DESC
	</select>
	<insert id="insertLike">
		INSERT INTO LIKE_TBL (LIKE_NO, MEMBER_NO, LIKE_TYPE, REF_NO)
		SELECT LIKE_SEQ.nextval, #{memberNo}, 2, #{refNo}
		FROM DUAL
		WHERE NOT EXISTS (
		    SELECT 1
		    FROM LIKE_TBL
		    WHERE MEMBER_NO = #{memberNo} AND REF_NO = #{refNo}
		)
	</insert>
	<select id="selectLikeTourList" resultType="tour">
		SELECT T.*, TT.TICKET_ADULT, TT.TICKET_YOUTH, TT.TICKET_CHILD
		FROM TOUR_TBL T
		INNER JOIN TOUR_TICKET_TBL TT ON T.TOUR_NO = TT.TOUR_NO
		WHERE T.TOUR_NO IN (
		    SELECT REF_NO
		    FROM LIKE_TBL
		    WHERE MEMBER_NO = #{memberNo} AND LIKE_TYPE = 2
		)
		ORDER BY T.TOUR_NO
	</select>
	<delete id="deleteLikeTour">
	    DELETE FROM like_tbl WHERE member_no = #{memberNo} AND ref_no = #{tourNo}
	</delete>
</mapper>
